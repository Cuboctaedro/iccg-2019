/* EXAMPLE FILE */

// 1. @fontface declarations
// @import url("//hello.myfonts.net/count/36e962");

  
// @font-face {
//     font-family: 'Olympian';
//     font-weight: 400;
//     font-style: italic;
//     src: url('webfonts/36E962_0_0.eot');
//     src: url('webfonts/36E962_0_0.eot?#iefix') format('embedded-opentype'),
//     url('webfonts/36E962_0_0.woff2') format('woff2'),
//     url('webfonts/36E962_0_0.woff') format('woff'),
//     url('webfonts/36E962_0_0.ttf') format('truetype');
// }
 
  
// @font-face {
//     font-family: 'Olympian';
//     font-weight: 400;
//     font-style: normal;
//     src: url('webfonts/36E962_1_0.eot');
//     src: url('webfonts/36E962_1_0.eot?#iefix') format('embedded-opentype'),
//     url('webfonts/36E962_1_0.woff2') format('woff2'),
//     url('webfonts/36E962_1_0.woff') format('woff'),
//     url('webfonts/36E962_1_0.ttf') format('truetype');
// }
 
  
// @font-face {
//     font-family: 'NeuePlak';
//     font-weight: 700;
//     src: url('webfonts/36E962_2_0.eot');
//     src: url('webfonts/36E962_2_0.eot?#iefix') format('embedded-opentype'),
//     url('webfonts/36E962_2_0.woff2') format('woff2'),
//     url('webfonts/36E962_2_0.woff') format('woff'),
//     url('webfonts/36E962_2_0.ttf') format('truetype');
// }
 
  
// @font-face {
//     font-family: 'NeuePlak-Cond';
//     font-weight: 800;
//     src: url('webfonts/36E962_3_0.eot');
//     src: url('webfonts/36E962_3_0.eot?#iefix') format('embedded-opentype'),
//     url('webfonts/36E962_3_0.woff2') format('woff2'),
//     url('webfonts/36E962_3_0.woff') format('woff'),
//     url('webfonts/36E962_3_0.ttf') format('truetype');
// }
 

// 2. Reset, normalize etc.

@import "resets/sanitize";
@import "resets/border-box";
@import "resets/blocks";
@import "resets/lists";

// 3. Custom settings (copy of defaults.scss)

@import "settings";

// 4. Import base library

@import "atomic-scss/index";


// 5. @extend and other styles

a {
    text-decoration: none;
    color: map-get($global-color-values, 'black');
}
.visually-hidden {
	position: absolute !important;
	clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
	clip: rect(1px, 1px, 1px, 1px);
	padding:0 !important;
	border:0 !important;
	height: 1px !important; 
	width: 1px !important; 
	overflow: hidden;
}
.grecaptcha-badge {
    display: none;
}
.animate{
    transition: all .4s cubic-bezier(.65,.05,.36,1);
}

.breadcrumbs li {
    &:after {
        content: "/";
        padding-left: rem(8px);
        padding-right: rem(8px);
    }
    &:last-child {
        &:after {
            content: "";
            padding-left: 0;
            padding-right: 0;
        }
    }
}

.content {
    p {
        margin-bottom: rem(24px);
    }
    h2 {
        @extend .fw-900 ;
        font-size: 24px;
        line-height:1;
    }
}
.input {
    @extend .bo-s-none, .bg-main, .bob-w-2, .bo-c-black, .bob-s-solid, .fs-16, .animate ;
    &:focus {
        background-color: map-get($global-color-values, 'white');

    }
    &:disabled {
        border-bottom-color: map-get($global-color-values, 'gray');
    }
}

.radio{
    color: map-get($global-color-values, 'black');
    font-size: rem(16px);
    position: relative;
    span {
        position:relative;
        padding-left: rem(32px);
    }
    span:after {
        content:'';
        width: rem(16px);
        height: rem(16px);
        border: 2px solid;
        position: absolute;
        left: 0;
        top: 3px;
        border-radius: 100%;
        -ms-border-radius: 100%;
        -moz-border-radius: 100%;
        -webkit-border-radius: 100%;
    }
    input[type="radio"] {
        cursor: pointer; 
        position:absolute;
        width:100%;
        height:100%;
        z-index: 1;
        opacity: 0;
        filter: alpha(opacity=0);
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"
    }
    input[type="radio"]:checked + span {
        color: map-get($global-color-values, 'white');
    }
    input[type="radio"]:checked + span:before {
        content:'';
        width:6px;
        height:6px;
        position:absolute;
        background-color: map-get($global-color-values, 'white');
        left:5px;
        top:8px;
        border-radius:100%;
        -ms-border-radius:100%;
        -moz-border-radius:100%;
        -webkit-border-radius:100%;
    }
}
button {
    cursor:pointer;
}

.hoverblock {
    &:hover,
    &:focus {
        background-color: map-get($global-color-values, 'white');
        .bg-black.c-main {
            color: map-get($global-color-values, 'white');
        }
        .c-white {
            color: map-get($global-color-values, 'black');
        }
    }
}